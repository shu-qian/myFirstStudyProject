<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sq.mapper.EmployeeMapper">
    <resultMap id="EmployeeMap" type="Employee">
        <id property="id" column="eid"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <result property="birth" column="birth"/>
        <result property="department" column="department"/>
        <association property="theDepartment" javaType="Department">
            <id property="id" column="did"/>
            <result property="name" column="dname"/>
        </association>
    </resultMap>

    <select id="getEmployees" resultMap="EmployeeMap">
        select e.id as eid,
               e.name,email,gender,birth,
               d.id as did,
               d.name as dname
        from springboot.department d,springboot.employee e
        where d.id = e.department
    </select>

    <insert id="save" parameterType="Employee">
        insert into springboot.employee (name,email,gender,department,birth)
        values (#{name},#{email},#{gender},#{department},#{birth});
    </insert>

    <select id="get" resultType="Employee">
        select * from springboot.employee where id = #{id}
    </select>

    <delete id="delete" parameterType="int">
        delete from springboot.employee where id = #{id}
    </delete>
    
    <update id="update" parameterType="Employee">
        update springboot.employee
        set name       = #{name},
            email      = #{email},
            gender     = #{gender},
            department = #{department},
            birth      = #{birth}
        where id = #{id};
    </update>

</mapper>